# Multi-stage Dockerfile for OpenEvolve fullstack app\n\n# Backend stage\nFROM python:3.9-slim AS backend\n\nWORKDIR /app\n\n# Install system dependencies\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    curl \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Copy backend files\nCOPY pyproject.toml setup.py README.md ./\nCOPY openevolve/ ./openevolve/\n\n# Install Python dependencies\nRUN pip install --no-cache-dir -e .\n\n# Frontend stage\nFROM node:18-alpine AS frontend\n\nWORKDIR /app\n\n# Copy frontend files\nCOPY alpha_frontend/ ./alpha_frontend/\n\n# Install frontend dependencies\nWORKDIR /app/alpha_frontend\nRUN npm install\n\n# Build frontend\nRUN npm run build\n\n# Production stage\nFROM python:3.9-slim\n\nWORKDIR /app\n\n# Install system dependencies\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    curl \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Copy backend files\nCOPY pyproject.toml setup.py README.md ./\nCOPY openevolve/ ./openevolve/\nCOPY scripts/ ./scripts/\n\n# Install Python dependencies\nRUN pip install --no-cache-dir -e .\n\n# Copy built frontend\nCOPY --from=frontend /app/alpha_frontend/.next ./alpha_frontend/.next\nCOPY --from=frontend /app/alpha_frontend/public ./alpha_frontend/public\n\n# Expose ports\nEXPOSE 8000 3000\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n    CMD curl -f http://localhost:8000/health || exit 1\n\n# Start script\nCMD [\"./scripts/start-fullstack.sh\"]